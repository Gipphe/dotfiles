[alias]
	ass = "!git assume"
	assd = "!git assumed"
	assume = "update-index --assume-unchanged"
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	b = "branch"
	ba = "branch -a"
	bn = "!git branch-name"
	branch-name = "!git rev-parse --abbrev-ref HEAD"
	ci = "commit"
	co = "checkout"
	code-review = "difftool origin/master..."
	cp = "cherry-pick"
	cr = "!git code-review"
	default-branch = "!basename -- \"$(git symbolic-ref refs/remotes/origin/HEAD --short)\""
	delete-merged-branches = "!git checkout master && git branch --merged | grep -v '\\\\*' | xargs -n 1 git branch -d"
	dft = "difftool"
	diffc = "diff --cached"
	dlog = "!f() { GIT_EXTERNAL_DIFF=diff-so-fancy git log -p --ext-diff $@; }; f"
	fa = "fetch --all --prune"
	first-branch-commit = "!f() { git rev-list --reverse \"$(git default-branch)\"..\"$(git branch-name)\" | head -n 1; }; f"
	gone = "!git branch --format '%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" { print $1 }' | xargs -r git branch -D"
	gr = "log --graph --full-history --all --color --pretty=format:\"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s\""
	hide-flake = "!git add --intent-to-add flake.nix flake.lock && git update-index --assume-unchanged flake.nix flake.lock"
	last = "log -1 HEAD"
	loa = "log --decorate --oneline --graph"
	lob = "log --decorate --oneline --graph --first-parent"
	lof = "log --oneline --decorate --all --graph --first-parent"
	lol = "log --decorate --oneline --graph --all"
	lola = "lolb --all"
	lolb = "log --graph --pretty=format:\"%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset\""
	lold = "log --graph --pretty=format:\"%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset\""
	loldr = "lold --date=short"
	md = "!git merge-diff"
	mdt = "!git merge-difftool"
	merge-diff = "!git diff $(git merge-span ... $1)"
	merge-difftool = "!git difftool $(git merge-span ... $1)"
	merge-log = "!git log $(git merge-span .. $1)"
	merge-span = "!f() { echo $(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f1)$1$(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f2); }; f"
	ml = "!git merge-log"
	mr = "!sh -c 'git fetch $1 merge-requests/$2/head:mr-$1-$2 && git checkout mr-$1-$2' -"
	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	p = "push"
	pp = "pull --prune"
	pub = "!git publish"
	publish = "!git push -u origin $(git branch-name)"
	puf = "push --force-with-lease"
	rb = "!git rebase-branch"
	rebase-branch = "!git rebase -i $(git merge-base master HEAD)"
	rec = "!git recreate"
	recreate = "!f() { [[ -n $@ ]] && git checkout \"$@\" && git unpublish && git checkout master && git branch -D \"$@\" && git checkout -b \"$@\" && git publish; }; f"
	rm-merged = "!echo \"Deprecated. Use 'git gone' instead.\"; git gone"
	st = "status"
	stage = "add"
	sw = "switch"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	unass = "!git unassume"
	unassume = "update-index --no-assume-unchanged"
	unpub = "!git unpublish"
	unpublish = "!git push origin :$(git branch-name)"
	unst = "!git unstage"
	unstage = "restore --staged"
	unstage-all = "reset HEAD"

[branch]
	autosetupmerge = "true"

[commit]
	gpgSign = true

[core]
	autocrlf = false
	editor = "nvim"
	eol = "lf"
	pager = "less '--tabs=4' -RFX"
	safecrlf = false
	whitespace = "fix,-indent-with-non-tab,trailing-space,cr-at-eol"


[credential "https://gist.github.com"]
	helper = "gh auth git-credential"

[credential "https://github.com"]
	helper = "gh auth git-credential"

[diff-so-fancy]
	changeHunkIndicators = true
	markEmptyLines = true
	stripLeadingSymbols = true
	useUnicodeRuler = true

[gpg]
	program = "gpg"

[init]
	defaultBranch = "main"


[merge]
	stat = "true"

[pull]
	ff = "only"

[push]
	default = "upstream"
	followTags = true

[rebase]
	autoSquash = "true"

[repack]
	usedeltabaseoffset = "true"

[rerere]
	autoUpdate = true
	enabled = true

[tag]
	gpgSign = true

[user]
	email = "gipphe@gmail.com"
	name = "Victor Nascimento Bakke"
	signingKey = "23723701395B436C"

