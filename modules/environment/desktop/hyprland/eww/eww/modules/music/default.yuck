(defvar music_reveal false)

(defpoll music :interval "15s"
               :initial `{
                 "song":"",
                 "artist":"",
                 "status":"",
                 "time":"",
                 "ctime":"",
                 "ttime": "",
                 "cover": ""
               }`
  `./modules/music/music_info.sh`)

(defwidget music []
  (eventbox :onhover "${EWW_CMD} update music_reveal=true"
            :onhoverlost "${EWW_CMD} update music_reveal=false"
    (box :class "music"
         :orientation "h"
         :space-evenly false
         :vexpand false
         :hexpand false
      (box :class "music__cover-art"
           :vexpand false
           :hexpand false
           :style "background-image: url('${music.cover}');")
      (button :class "music__song"
              :onclick "EWW_CMD='${EWW_CMD}' ./scripts/pop.sh music"
        {music.song})
      (revealer :transition "slideRight"
                :reveal music_reveal
                :duration "350ms"
        (box :vexpand false
             :hexpand false
             :orientation "h"
          (button :class "music__prev"
                  :onclick "mpc -q prev"
            "")
          (button :class "music__play"
                  :onclick "mpc -q toggle"
            {music.status})
          (button :class "music__next"
                  :onclick "mpc -q next"
            ""))))))

(defwidget music_pop []
  (box :class "music-pop"
       :orientation "h"
       :space-evenly false
       :vexpand false
       :hexpand false
    (box :class "music-pop__cover-art"
         :vexpand false
         :hexpand false
         :style "background-image: url('${music.cover}');")
    (box :orientation "v"
         :spacing 20
         :space-evenly "false"
         :vexpand "false"
         :hexpand "false"
      (label :halign "center"
             :class "music-pop__song"
             :wrap "true"
             :text {music.song})
      (label :halign "center"
             :class "music-pop__artist"
             :wrap "true"
             :text {music.artist})
      (box :orientation "h"
           :spacing 15
           :halign "center"
           :space-evenly "false"
           :vexpand "false"
           :hexpand "false"
        (button :class "music-pop__prev"
                :onclick "mpc -q prev"
          "")
        (button :class "music-pop__play"
                :onclick "mpc -q toggle"
          {music.status})
        (button :class "music-pop__next"
                :onclick "mpc -q next"
          ""))
      (box :class "music-pop__bar"
           :halign "center"
           :vexpand "false"
           :hexpand "false"
           :space-evenly "false"
        (scale :onscroll "mpc -q seek {}"
               :min 0
               :active "true"
               :max 100
               :value
          {music.time})))))

(defwindow music_win
  :stacking "fg"
  :focusable "false"
  :screen 1
  :geometry (geometry :x "0"
                      :y "7%"
                      :width 428
                      :height 104
                      :anchor "top center")
  (music_pop))
