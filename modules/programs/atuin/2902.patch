From 0dd4d6ce262e3bb27480902ee617f35b78bd5e60 Mon Sep 17 00:00:00 2001
From: r-vdp <ramses@well-founded.dev>
Date: Sat, 13 Sep 2025 11:36:33 +0200
Subject: [PATCH 1/2] fix: fish up binding

https://github.com/atuinsh/atuin/pull/2677 introduced logic based on
`$FISH_VERSION` to determine how to bind keys in fish.
However, this env var is not exported to child processes, as you can see
by running `sh -c 'echo $FISH_VERSION'` from fish.

Instead, we can simply push the if statement into the actual fish code
that we generate, since fish is aware of its own version, and then we
can decide which binding syntax to use.

Co-authored-by: Anson VanDoren <anson.vandoren@gmail.com>
---
 crates/atuin/src/command/client/init/fish.rs | 29 +++++++++-----------
 1 file changed, 13 insertions(+), 16 deletions(-)

diff --git a/crates/atuin/src/command/client/init/fish.rs b/crates/atuin/src/command/client/init/fish.rs
index 954a7bd6f8a..3be522f235e 100644
--- a/crates/atuin/src/command/client/init/fish.rs
+++ b/crates/atuin/src/command/client/init/fish.rs
@@ -10,30 +10,27 @@ pub fn init_static(disable_up_arrow: bool, disable_ctrl_r: bool) {
     // We keep it for compatibility with fish 3.x
     if std::env::var("ATUIN_NOBIND").is_err() {
         const BIND_CTRL_R: &str = r"bind \cr _atuin_search";
+        const BIND_UP_ARROW: &str = r"if string match -q '4.*' $version
+    bind up _atuin_bind_up
+else
+    bind -k up _atuin_bind_up
+end
+bind \eOA _atuin_bind_up
+bind \e\[A _atuin_bind_up";
         const BIND_CTRL_R_INS: &str = r"bind -M insert \cr _atuin_search";
-        const BIND_UP_ARROW_INS: &str = r"bind -M insert -k up _atuin_bind_up
+        const BIND_UP_ARROW_INS: &str = r"if string match -q '4.*' $version
+    bind -M insert up _atuin_bind_up
+else
+    bind -M insert -k up _atuin_bind_up
+end
 bind -M insert \eOA _atuin_bind_up
 bind -M insert \e\[A _atuin_bind_up";
 
-        let bind_up_arrow = match std::env::var("FISH_VERSION") {
-            Ok(ref version) if version.starts_with("4.") => r"bind up _atuin_bind_up",
-            Ok(_) => r"bind -k up _atuin_bind_up",
-
-            // do nothing - we can't panic or error as this could be in use in
-            // non-fish pipelines
-            _ => "",
-        }
-        .to_string();
-
         if !disable_ctrl_r {
             println!("{BIND_CTRL_R}");
         }
         if !disable_up_arrow {
-            println!(
-                r"{bind_up_arrow}
-bind \eOA _atuin_bind_up
-bind \e\[A _atuin_bind_up"
-            );
+            println!("{BIND_UP_ARROW}");
         }
 
         println!("if bind -M insert > /dev/null 2>&1");

From 8022df40f211dc67944cf1471f4e62d0ef86b629 Mon Sep 17 00:00:00 2001
From: r-vdp <ramses@well-founded.dev>
Date: Thu, 18 Sep 2025 18:59:11 +0200
Subject: [PATCH 2/2] init/fish: simplify the code to make it easier to see
 what's going on

---
 crates/atuin/src/command/client/init/fish.rs | 98 +++++++++++++-------
 1 file changed, 65 insertions(+), 33 deletions(-)

diff --git a/crates/atuin/src/command/client/init/fish.rs b/crates/atuin/src/command/client/init/fish.rs
index 3be522f235e..47d41b4ba38 100644
--- a/crates/atuin/src/command/client/init/fish.rs
+++ b/crates/atuin/src/command/client/init/fish.rs
@@ -1,45 +1,77 @@
 use atuin_dotfiles::store::{AliasStore, var::VarStore};
 use eyre::Result;
 
+fn print_bindings(
+    indent: &str,
+    disable_up_arrow: bool,
+    disable_ctrl_r: bool,
+    bind_ctrl_r: &str,
+    bind_up_arrow: &str,
+    bind_ctrl_r_ins: &str,
+    bind_up_arrow_ins: &str,
+) {
+    if !disable_ctrl_r {
+        println!("{indent}{bind_ctrl_r}");
+    }
+    if !disable_up_arrow {
+        println!("{indent}{bind_up_arrow}");
+    }
+
+    println!("{indent}if bind -M insert >/dev/null 2>&1");
+    if !disable_ctrl_r {
+        println!("{indent}{indent}{bind_ctrl_r_ins}");
+    }
+    if !disable_up_arrow {
+        println!("{indent}{indent}{bind_up_arrow_ins}");
+    }
+    println!("{indent}end");
+}
+
 pub fn init_static(disable_up_arrow: bool, disable_ctrl_r: bool) {
+    let indent = " ".repeat(4);
+
     let base = include_str!("../../../shell/atuin.fish");
 
     println!("{base}");
 
-    // In fish 4.0 and above the option bind -k doesn't exist anymore.
-    // We keep it for compatibility with fish 3.x
     if std::env::var("ATUIN_NOBIND").is_err() {
-        const BIND_CTRL_R: &str = r"bind \cr _atuin_search";
-        const BIND_UP_ARROW: &str = r"if string match -q '4.*' $version
-    bind up _atuin_bind_up
-else
-    bind -k up _atuin_bind_up
-end
-bind \eOA _atuin_bind_up
-bind \e\[A _atuin_bind_up";
-        const BIND_CTRL_R_INS: &str = r"bind -M insert \cr _atuin_search";
-        const BIND_UP_ARROW_INS: &str = r"if string match -q '4.*' $version
-    bind -M insert up _atuin_bind_up
-else
-    bind -M insert -k up _atuin_bind_up
-end
-bind -M insert \eOA _atuin_bind_up
-bind -M insert \e\[A _atuin_bind_up";
-
-        if !disable_ctrl_r {
-            println!("{BIND_CTRL_R}");
-        }
-        if !disable_up_arrow {
-            println!("{BIND_UP_ARROW}");
-        }
-
-        println!("if bind -M insert > /dev/null 2>&1");
-        if !disable_ctrl_r {
-            println!("{BIND_CTRL_R_INS}");
-        }
-        if !disable_up_arrow {
-            println!("{BIND_UP_ARROW_INS}");
-        }
+        println!("if string match -q '4.*' $version");
+
+        // In fish 4.0 and above the option bind -k doesn't exist anymore,
+        // instead we can use key names and modifiers directly.
+        print_bindings(
+            &indent,
+            disable_up_arrow,
+            disable_ctrl_r,
+            "bind ctrl-r _atuin_search",
+            "bind up _atuin_bind_up",
+            "bind -M insert ctrl-r _atuin_search",
+            "bind -M insert up _atuin_bind_up",
+        );
+
+        println!("else");
+
+        // We keep these for compatibility with fish 3.x
+        print_bindings(
+            &indent,
+            disable_up_arrow,
+            disable_ctrl_r,
+            r"bind \cr _atuin_search",
+            &[
+                r"bind -k up _atuin_bind_up",
+                r"bind \eOA _atuin_bind_up",
+                r"bind \e\[A _atuin_bind_up",
+            ]
+            .join("; "),
+            r"bind -M insert \cr _atuin_search",
+            &[
+                r"bind -M insert -k up _atuin_bind_up",
+                r"bind -M insert \eOA _atuin_bind_up",
+                r"bind -M insert \e\[A _atuin_bind_up",
+            ]
+            .join("; "),
+        );
+
         println!("end");
     }
 }
